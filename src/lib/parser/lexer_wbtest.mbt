///|
test "lexer" {
  let tokens = []
  let lexbuf = @lexbuf.StringLexbuf::from_string(lexer_src)
  while token(lexbuf) is triple {
    tokens.push(triple)
    if triple.0 is EOI {
      break
    }
  }
  let tokens_new = []
  let bytes = @encoding.encode(UTF8, lexer_src)
  let base = bytes[:]
  let mut curr = base
  while token_new(curr, base~) is triple {
    curr = triple.0
    tokens_new.push((triple.1, triple.2, triple.3))
    if triple.1 is EOI {
      break
    }
  }
  @json.inspect(tokens, content=[
    [{ "$tag": "REGEX" }, 0, 5],
    [{ "$tag": "LC_IDENT", "0": "ws" }, 6, 8],
    [{ "$tag": "EQ" }, 9, 10],
    [{ "$tag": "LBRACKET" }, 11, 12],
    [{ "$tag": "CHAR", "0": " " }, 12, 15],
    [{ "$tag": "CHAR", "0": "\t" }, 16, 20],
    [{ "$tag": "CHAR", "0": "\r" }, 21, 25],
    [{ "$tag": "CHAR", "0": "\n" }, 26, 30],
    [{ "$tag": "RBRACKET" }, 30, 31],
    [{ "$tag": "PLUS" }, 31, 32],
    [{ "$tag": "SEMICOLON" }, 32, 33],
    [{ "$tag": "REGEX" }, 34, 39],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 40, 49],
    [{ "$tag": "EQ" }, 50, 51],
    [{ "$tag": "LBRACKET" }, 52, 53],
    [{ "$tag": "CHAR", "0": "0" }, 53, 56],
    [{ "$tag": "MINUS" }, 56, 57],
    [{ "$tag": "CHAR", "0": "9" }, 57, 60],
    [{ "$tag": "CHAR", "0": "A" }, 61, 64],
    [{ "$tag": "MINUS" }, 64, 65],
    [{ "$tag": "CHAR", "0": "F" }, 65, 68],
    [{ "$tag": "CHAR", "0": "a" }, 69, 72],
    [{ "$tag": "MINUS" }, 72, 73],
    [{ "$tag": "CHAR", "0": "f" }, 73, 76],
    [{ "$tag": "RBRACKET" }, 76, 77],
    [{ "$tag": "SEMICOLON" }, 77, 78],
    [{ "$tag": "REGEX" }, 79, 84],
    [{ "$tag": "LC_IDENT", "0": "lc_ident" }, 85, 93],
    [{ "$tag": "EQ" }, 94, 95],
    [{ "$tag": "LBRACKET" }, 96, 97],
    [{ "$tag": "CHAR", "0": "a" }, 97, 100],
    [{ "$tag": "MINUS" }, 100, 101],
    [{ "$tag": "CHAR", "0": "z" }, 101, 104],
    [{ "$tag": "CHAR", "0": "_" }, 105, 108],
    [{ "$tag": "RBRACKET" }, 108, 109],
    [{ "$tag": "LBRACKET" }, 110, 111],
    [{ "$tag": "CHAR", "0": "A" }, 111, 114],
    [{ "$tag": "MINUS" }, 114, 115],
    [{ "$tag": "CHAR", "0": "Z" }, 115, 118],
    [{ "$tag": "CHAR", "0": "a" }, 119, 122],
    [{ "$tag": "MINUS" }, 122, 123],
    [{ "$tag": "CHAR", "0": "z" }, 123, 126],
    [{ "$tag": "CHAR", "0": "_" }, 127, 130],
    [{ "$tag": "CHAR", "0": "0" }, 131, 134],
    [{ "$tag": "MINUS" }, 134, 135],
    [{ "$tag": "CHAR", "0": "9" }, 135, 138],
    [{ "$tag": "RBRACKET" }, 138, 139],
    [{ "$tag": "STAR" }, 139, 140],
    [{ "$tag": "SEMICOLON" }, 140, 141],
    [
      {
        "$tag": "RULE_LC_IDENT_LPAREN_CODE_RPAREN_ARROW_CODE_LBRACE",
        "0": [
          "token", "token[T : @lexbuf.IStringLexbuf](lexbuf : T) -> (Token, Int, Int) ",
        ],
      },
      143,
      215,
    ],
    [{ "$tag": "PARSE_LBRACE" }, 218, 225],
    [{ "$tag": "LC_IDENT", "0": "ws" }, 230, 232],
    [{ "$tag": "FAT_ARROW" }, 233, 235],
    [{ "$tag": "LBRACE_CODE_RBRACE", "0": " token(lexbuf) " }, 236, 253],
    [{ "$tag": "STRING", "0": "//" }, 258, 262],
    [{ "$tag": "LBRACKET" }, 263, 264],
    [{ "$tag": "CARET" }, 264, 265],
    [{ "$tag": "CHAR", "0": "\n" }, 266, 270],
    [{ "$tag": "RBRACKET" }, 270, 271],
    [{ "$tag": "STAR" }, 271, 272],
    [{ "$tag": "CHAR", "0": "\n" }, 273, 277],
    [{ "$tag": "QUESTION" }, 277, 278],
    [{ "$tag": "FAT_ARROW" }, 279, 281],
    [{ "$tag": "LBRACE_CODE_RBRACE", "0": " token(lexbuf) " }, 282, 299],
    [{ "$tag": "EOF" }, 304, 307],
    [{ "$tag": "FAT_ARROW" }, 308, 310],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (EOI, $startpos, $endpos) " },
      311,
      340,
    ],
    [{ "$tag": "STRING", "0": "rule" }, 345, 351],
    [{ "$tag": "LC_IDENT", "0": "ws" }, 352, 354],
    [{ "$tag": "LPAREN" }, 355, 356],
    [{ "$tag": "LPAREN" }, 356, 357],
    [{ "$tag": "LC_IDENT", "0": "lc_ident" }, 357, 365],
    [{ "$tag": "AS" }, 366, 368],
    [{ "$tag": "LC_IDENT", "0": "t1" }, 369, 371],
    [{ "$tag": "RPAREN" }, 371, 372],
    [{ "$tag": "LBRACKET" }, 373, 374],
    [{ "$tag": "CARET" }, 374, 375],
    [{ "$tag": "CHAR", "0": "{" }, 376, 379],
    [{ "$tag": "RBRACKET" }, 379, 380],
    [{ "$tag": "PLUS" }, 380, 381],
    [{ "$tag": "AS" }, 382, 384],
    [{ "$tag": "LC_IDENT", "0": "t2" }, 385, 387],
    [{ "$tag": "RPAREN" }, 387, 388],
    [{ "$tag": "LC_IDENT", "0": "ws" }, 389, 391],
    [{ "$tag": "QUESTION" }, 391, 392],
    [{ "$tag": "CHAR", "0": "{" }, 393, 396],
    [{ "$tag": "FAT_ARROW" }, 397, 399],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      (RULE_LC_IDENT_LPAREN_CODE_RPAREN_ARROW_CODE_LBRACE((t1, t2)), $startpos, $endpos)\n    ",
      },
      400,
      496,
    ],
    [{ "$tag": "STRING", "0": "parse" }, 501, 508],
    [{ "$tag": "LC_IDENT", "0": "ws" }, 509, 511],
    [{ "$tag": "QUESTION" }, 511, 512],
    [{ "$tag": "STRING", "0": "{" }, 513, 516],
    [{ "$tag": "FAT_ARROW" }, 517, 519],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (PARSE_LBRACE, $startpos, $endpos) ",
      },
      520,
      558,
    ],
    [{ "$tag": "STRING", "0": "=>" }, 563, 567],
    [{ "$tag": "FAT_ARROW" }, 568, 570],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (FAT_ARROW, $startpos, $endpos) " },
      571,
      606,
    ],
    [{ "$tag": "STRING", "0": "_" }, 611, 614],
    [{ "$tag": "FAT_ARROW" }, 615, 617],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (UNDERSCORE, $startpos, $endpos) ",
      },
      618,
      654,
    ],
    [{ "$tag": "STRING", "0": "{" }, 659, 662],
    [{ "$tag": "FAT_ARROW" }, 663, 665],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " \n      let buffer = StringBuilder::new()\n      let end_pos = code_rbrace(buffer, lexbuf)\n      (LBRACE_CODE_RBRACE(buffer.to_string()), $startpos, end_pos)\n    ",
      },
      666,
      829,
    ],
    [{ "$tag": "STRING", "0": "}" }, 834, 837],
    [{ "$tag": "FAT_ARROW" }, 838, 840],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (RBRACE, $startpos, $endpos) " },
      841,
      873,
    ],
    [{ "$tag": "STRING", "0": "(" }, 878, 881],
    [{ "$tag": "FAT_ARROW" }, 882, 884],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (LPAREN, $startpos, $endpos) " },
      885,
      917,
    ],
    [{ "$tag": "STRING", "0": ")" }, 922, 925],
    [{ "$tag": "FAT_ARROW" }, 926, 928],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (RPAREN, $startpos, $endpos) " },
      929,
      961,
    ],
    [{ "$tag": "STRING", "0": "[" }, 966, 969],
    [{ "$tag": "FAT_ARROW" }, 970, 972],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (LBRACKET, $startpos, $endpos) " },
      973,
      1007,
    ],
    [{ "$tag": "STRING", "0": "]" }, 1012, 1015],
    [{ "$tag": "FAT_ARROW" }, 1016, 1018],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (RBRACKET, $startpos, $endpos) " },
      1019,
      1053,
    ],
    [{ "$tag": "STRING", "0": "=" }, 1058, 1061],
    [{ "$tag": "FAT_ARROW" }, 1062, 1064],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (EQ, $startpos, $endpos) " },
      1065,
      1093,
    ],
    [{ "$tag": "STRING", "0": ";" }, 1098, 1101],
    [{ "$tag": "FAT_ARROW" }, 1102, 1104],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (SEMICOLON, $startpos, $endpos) " },
      1105,
      1140,
    ],
    [{ "$tag": "STRING", "0": "|" }, 1145, 1148],
    [{ "$tag": "FAT_ARROW" }, 1149, 1151],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (BAR, $startpos, $endpos) " },
      1152,
      1181,
    ],
    [{ "$tag": "STRING", "0": "*" }, 1186, 1189],
    [{ "$tag": "FAT_ARROW" }, 1190, 1192],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (STAR, $startpos, $endpos) " },
      1193,
      1223,
    ],
    [{ "$tag": "STRING", "0": "+" }, 1228, 1231],
    [{ "$tag": "FAT_ARROW" }, 1232, 1234],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (PLUS, $startpos, $endpos) " },
      1235,
      1265,
    ],
    [{ "$tag": "STRING", "0": "?" }, 1270, 1273],
    [{ "$tag": "FAT_ARROW" }, 1274, 1276],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (QUESTION, $startpos, $endpos) " },
      1277,
      1311,
    ],
    [{ "$tag": "STRING", "0": "-" }, 1316, 1319],
    [{ "$tag": "FAT_ARROW" }, 1320, 1322],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (MINUS, $startpos, $endpos) " },
      1323,
      1354,
    ],
    [{ "$tag": "STRING", "0": "^" }, 1359, 1362],
    [{ "$tag": "FAT_ARROW" }, 1363, 1365],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (CARET, $startpos, $endpos) " },
      1366,
      1397,
    ],
    [{ "$tag": "STRING", "0": "\\" }, 1402, 1406],
    [{ "$tag": "FAT_ARROW" }, 1407, 1409],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (BACKSLASH, $startpos, $endpos) " },
      1410,
      1445,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1450, 1454],
    [{ "$tag": "LPAREN" }, 1455, 1456],
    [{ "$tag": "LBRACKET" }, 1456, 1457],
    [{ "$tag": "CARET" }, 1457, 1458],
    [{ "$tag": "CHAR", "0": "'" }, 1459, 1463],
    [{ "$tag": "CHAR", "0": "\\" }, 1464, 1468],
    [{ "$tag": "RBRACKET" }, 1468, 1469],
    [{ "$tag": "AS" }, 1470, 1472],
    [{ "$tag": "LC_IDENT", "0": "t" }, 1473, 1474],
    [{ "$tag": "RPAREN" }, 1474, 1475],
    [{ "$tag": "CHAR", "0": "'" }, 1476, 1480],
    [{ "$tag": "FAT_ARROW" }, 1481, 1483],
    [
      { "$tag": "LBRACE_CODE_RBRACE", "0": " (CHAR(t), $startpos, $endpos) " },
      1484,
      1517,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1522, 1526],
    [{ "$tag": "STRING", "0": "\\b" }, 1527, 1532],
    [{ "$tag": "CHAR", "0": "'" }, 1533, 1537],
    [{ "$tag": "FAT_ARROW" }, 1538, 1540],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\u{08}'), $startpos, $endpos) ",
      },
      1541,
      1581,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1586, 1590],
    [{ "$tag": "STRING", "0": "\\t" }, 1591, 1596],
    [{ "$tag": "CHAR", "0": "'" }, 1597, 1601],
    [{ "$tag": "FAT_ARROW" }, 1602, 1604],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\t'), $startpos, $endpos) ",
      },
      1605,
      1641,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1646, 1650],
    [{ "$tag": "STRING", "0": "\\v" }, 1651, 1656],
    [{ "$tag": "CHAR", "0": "'" }, 1657, 1661],
    [{ "$tag": "FAT_ARROW" }, 1662, 1664],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\u{0b}'), $startpos, $endpos) ",
      },
      1665,
      1705,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1710, 1714],
    [{ "$tag": "STRING", "0": "\\r" }, 1715, 1720],
    [{ "$tag": "CHAR", "0": "'" }, 1721, 1725],
    [{ "$tag": "FAT_ARROW" }, 1726, 1728],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\r'), $startpos, $endpos) ",
      },
      1729,
      1765,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1770, 1774],
    [{ "$tag": "STRING", "0": "\\n" }, 1775, 1780],
    [{ "$tag": "CHAR", "0": "'" }, 1781, 1785],
    [{ "$tag": "FAT_ARROW" }, 1786, 1788],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\n'), $startpos, $endpos) ",
      },
      1789,
      1825,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1830, 1834],
    [{ "$tag": "STRING", "0": "\\\\" }, 1835, 1841],
    [{ "$tag": "CHAR", "0": "'" }, 1842, 1846],
    [{ "$tag": "FAT_ARROW" }, 1847, 1849],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\\\'), $startpos, $endpos) ",
      },
      1850,
      1886,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1891, 1895],
    [{ "$tag": "STRING", "0": "\\'" }, 1896, 1901],
    [{ "$tag": "CHAR", "0": "'" }, 1902, 1906],
    [{ "$tag": "FAT_ARROW" }, 1907, 1909],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " (CHAR('\\''), $startpos, $endpos) ",
      },
      1910,
      1946,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 1951, 1955],
    [{ "$tag": "STRING", "0": "\\x" }, 1956, 1961],
    [{ "$tag": "LPAREN" }, 1962, 1963],
    [{ "$tag": "LPAREN" }, 1963, 1964],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 1964, 1973],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 1974, 1983],
    [{ "$tag": "RPAREN" }, 1983, 1984],
    [{ "$tag": "AS" }, 1985, 1987],
    [{ "$tag": "LC_IDENT", "0": "t" }, 1988, 1989],
    [{ "$tag": "RPAREN" }, 1989, 1990],
    [{ "$tag": "CHAR", "0": "'" }, 1991, 1995],
    [{ "$tag": "FAT_ARROW" }, 1996, 1998],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      (CHAR(code.unsafe_to_char()), $startpos, $endpos)\n    ",
      },
      1999,
      2126,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 2131, 2135],
    [{ "$tag": "STRING", "0": "\\u" }, 2136, 2141],
    [{ "$tag": "LPAREN" }, 2142, 2143],
    [{ "$tag": "LPAREN" }, 2143, 2144],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 2144, 2153],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 2154, 2163],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 2164, 2173],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 2174, 2183],
    [{ "$tag": "RPAREN" }, 2183, 2184],
    [{ "$tag": "AS" }, 2185, 2187],
    [{ "$tag": "LC_IDENT", "0": "t" }, 2188, 2189],
    [{ "$tag": "RPAREN" }, 2189, 2190],
    [{ "$tag": "CHAR", "0": "'" }, 2191, 2195],
    [{ "$tag": "FAT_ARROW" }, 2196, 2198],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      (CHAR(code.unsafe_to_char()), $startpos, $endpos)\n    ",
      },
      2199,
      2326,
    ],
    [{ "$tag": "CHAR", "0": "'" }, 2331, 2335],
    [{ "$tag": "STRING", "0": "\\u{" }, 2336, 2342],
    [{ "$tag": "LPAREN" }, 2343, 2344],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 2344, 2353],
    [{ "$tag": "PLUS" }, 2353, 2354],
    [{ "$tag": "AS" }, 2355, 2357],
    [{ "$tag": "LC_IDENT", "0": "t" }, 2358, 2359],
    [{ "$tag": "RPAREN" }, 2359, 2360],
    [{ "$tag": "CHAR", "0": "}" }, 2361, 2364],
    [{ "$tag": "CHAR", "0": "'" }, 2365, 2369],
    [{ "$tag": "FAT_ARROW" }, 2370, 2372],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      (CHAR(code.unsafe_to_char()), $startpos, $endpos)\n    ",
      },
      2373,
      2500,
    ],
    [{ "$tag": "CHAR", "0": "\"" }, 2505, 2508],
    [{ "$tag": "FAT_ARROW" }, 2509, 2511],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let buffer = StringBuilder::new()\n      let end_pos = string_inner_rquote(buffer, lexbuf)\n      (STRING(buffer.to_string()), $startpos, end_pos)\n    ",
      },
      2512,
      2670,
    ],
    [{ "$tag": "LC_IDENT", "0": "lc_ident" }, 2675, 2683],
    [{ "$tag": "AS" }, 2684, 2686],
    [{ "$tag": "LC_IDENT", "0": "t" }, 2687, 2688],
    [{ "$tag": "FAT_ARROW" }, 2689, 2691],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      (match t {\n        \"eof\" => EOF\n        \"regex\" => REGEX\n        \"as\" => AS\n        _ => LC_IDENT(t)\n      }, $startpos, $endpos)\n    ",
      },
      2692,
      2835,
    ],
    [{ "$tag": "RBRACE" }, 2838, 2839],
    [{ "$tag": "RBRACE" }, 2840, 2841],
    [
      {
        "$tag": "RULE_LC_IDENT_LPAREN_CODE_RPAREN_ARROW_CODE_LBRACE",
        "0": [
          "string_inner_rquote", "string_inner_rquote[T : @lexbuf.IStringLexbuf](buffer : StringBuilder, lexbuf : T) -> Int ",
        ],
      },
      2843,
      2939,
    ],
    [{ "$tag": "PARSE_LBRACE" }, 2942, 2949],
    [{ "$tag": "CHAR", "0": "\"" }, 2954, 2957],
    [{ "$tag": "FAT_ARROW" }, 2958, 2960],
    [{ "$tag": "LBRACE_CODE_RBRACE", "0": " $endpos " }, 2961, 2972],
    [{ "$tag": "STRING", "0": "\\b" }, 2977, 2982],
    [{ "$tag": "FAT_ARROW" }, 2983, 2985],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\u{08}')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      2986,
      3069,
    ],
    [{ "$tag": "STRING", "0": "\\t" }, 3074, 3079],
    [{ "$tag": "FAT_ARROW" }, 3080, 3082],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\t')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3083,
      3162,
    ],
    [{ "$tag": "STRING", "0": "\\v" }, 3167, 3172],
    [{ "$tag": "FAT_ARROW" }, 3173, 3175],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\u{0b}')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3176,
      3259,
    ],
    [{ "$tag": "STRING", "0": "\\r" }, 3264, 3269],
    [{ "$tag": "FAT_ARROW" }, 3270, 3272],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\r')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3273,
      3352,
    ],
    [{ "$tag": "STRING", "0": "\\n" }, 3357, 3362],
    [{ "$tag": "FAT_ARROW" }, 3363, 3365],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\n')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3366,
      3445,
    ],
    [{ "$tag": "STRING", "0": "\\\\" }, 3450, 3456],
    [{ "$tag": "FAT_ARROW" }, 3457, 3459],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\\\\')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3460,
      3539,
    ],
    [{ "$tag": "STRING", "0": "\\\"" }, 3544, 3550],
    [{ "$tag": "FAT_ARROW" }, 3551, 3553],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char('\"')\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3554,
      3632,
    ],
    [{ "$tag": "STRING", "0": "\\x" }, 3637, 3642],
    [{ "$tag": "LPAREN" }, 3643, 3644],
    [{ "$tag": "LPAREN" }, 3644, 3645],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3645, 3654],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3655, 3664],
    [{ "$tag": "RPAREN" }, 3664, 3665],
    [{ "$tag": "AS" }, 3666, 3668],
    [{ "$tag": "LC_IDENT", "0": "t" }, 3669, 3670],
    [{ "$tag": "RPAREN" }, 3670, 3671],
    [{ "$tag": "CHAR", "0": "'" }, 3672, 3676],
    [{ "$tag": "FAT_ARROW" }, 3677, 3679],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      buffer.write_char(code.unsafe_to_char())\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3680,
      3840,
    ],
    [{ "$tag": "STRING", "0": "\\u" }, 3845, 3850],
    [{ "$tag": "LPAREN" }, 3851, 3852],
    [{ "$tag": "LPAREN" }, 3852, 3853],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3853, 3862],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3863, 3872],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3873, 3882],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 3883, 3892],
    [{ "$tag": "RPAREN" }, 3892, 3893],
    [{ "$tag": "AS" }, 3894, 3896],
    [{ "$tag": "LC_IDENT", "0": "t" }, 3897, 3898],
    [{ "$tag": "RPAREN" }, 3898, 3899],
    [{ "$tag": "CHAR", "0": "'" }, 3900, 3904],
    [{ "$tag": "FAT_ARROW" }, 3905, 3907],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      buffer.write_char(code.unsafe_to_char())\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      3908,
      4068,
    ],
    [{ "$tag": "STRING", "0": "\\u{" }, 4073, 4079],
    [{ "$tag": "LPAREN" }, 4080, 4081],
    [{ "$tag": "LC_IDENT", "0": "hex_digit" }, 4081, 4090],
    [{ "$tag": "PLUS" }, 4090, 4091],
    [{ "$tag": "AS" }, 4092, 4094],
    [{ "$tag": "LC_IDENT", "0": "t" }, 4095, 4096],
    [{ "$tag": "RPAREN" }, 4096, 4097],
    [{ "$tag": "CHAR", "0": "}" }, 4098, 4101],
    [{ "$tag": "CHAR", "0": "'" }, 4102, 4106],
    [{ "$tag": "FAT_ARROW" }, 4107, 4109],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      let code = (try? @strconv.parse_int(t, base=16)).unwrap()\n      buffer.write_char(code.unsafe_to_char())\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      4110,
      4270,
    ],
    [{ "$tag": "UNDERSCORE" }, 4275, 4276],
    [{ "$tag": "AS" }, 4277, 4279],
    [{ "$tag": "LC_IDENT", "0": "t" }, 4280, 4281],
    [{ "$tag": "FAT_ARROW" }, 4282, 4284],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char(t)\n      string_inner_rquote(buffer, lexbuf)\n    ",
      },
      4285,
      4361,
    ],
    [{ "$tag": "EOF" }, 4366, 4369],
    [{ "$tag": "FAT_ARROW" }, 4370, 4372],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " abort(\"Unexpected end of input\") ",
      },
      4373,
      4409,
    ],
    [{ "$tag": "RBRACE" }, 4412, 4413],
    [{ "$tag": "RBRACE" }, 4414, 4415],
    [
      {
        "$tag": "RULE_LC_IDENT_LPAREN_CODE_RPAREN_ARROW_CODE_LBRACE",
        "0": [
          "code_rbrace", "code_rbrace[T : @lexbuf.IStringLexbuf](buffer : StringBuilder, lexbuf : T) -> Int ",
        ],
      },
      4417,
      4505,
    ],
    [{ "$tag": "PARSE_LBRACE" }, 4508, 4515],
    [{ "$tag": "LPAREN" }, 4520, 4521],
    [{ "$tag": "STRING", "0": "//" }, 4521, 4525],
    [{ "$tag": "LBRACKET" }, 4526, 4527],
    [{ "$tag": "CARET" }, 4527, 4528],
    [{ "$tag": "CHAR", "0": "\n" }, 4529, 4533],
    [{ "$tag": "RBRACKET" }, 4533, 4534],
    [{ "$tag": "PLUS" }, 4534, 4535],
    [{ "$tag": "CHAR", "0": "\n" }, 4536, 4540],
    [{ "$tag": "RPAREN" }, 4540, 4541],
    [{ "$tag": "AS" }, 4542, 4544],
    [{ "$tag": "LC_IDENT", "0": "t" }, 4545, 4546],
    [{ "$tag": "FAT_ARROW" }, 4547, 4549],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    ",
      },
      4550,
      4620,
    ],
    [{ "$tag": "LPAREN" }, 4625, 4626],
    [{ "$tag": "CHAR", "0": "\"" }, 4626, 4629],
    [{ "$tag": "LPAREN" }, 4630, 4631],
    [{ "$tag": "LBRACKET" }, 4631, 4632],
    [{ "$tag": "CARET" }, 4632, 4633],
    [{ "$tag": "CHAR", "0": "\"" }, 4634, 4637],
    [{ "$tag": "CHAR", "0": "\\" }, 4638, 4642],
    [{ "$tag": "RBRACKET" }, 4642, 4643],
    [{ "$tag": "BAR" }, 4644, 4645],
    [{ "$tag": "CHAR", "0": "\\" }, 4646, 4650],
    [{ "$tag": "UNDERSCORE" }, 4651, 4652],
    [{ "$tag": "RPAREN" }, 4652, 4653],
    [{ "$tag": "STAR" }, 4653, 4654],
    [{ "$tag": "CHAR", "0": "\"" }, 4655, 4658],
    [{ "$tag": "RPAREN" }, 4658, 4659],
    [{ "$tag": "AS" }, 4660, 4662],
    [{ "$tag": "LC_IDENT", "0": "t" }, 4663, 4664],
    [{ "$tag": "FAT_ARROW" }, 4665, 4667],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    ",
      },
      4668,
      4738,
    ],
    [{ "$tag": "LPAREN" }, 4743, 4744],
    [{ "$tag": "CHAR", "0": "'" }, 4744, 4748],
    [{ "$tag": "LBRACKET" }, 4749, 4750],
    [{ "$tag": "CARET" }, 4750, 4751],
    [{ "$tag": "CHAR", "0": "'" }, 4752, 4756],
    [{ "$tag": "CHAR", "0": "\\" }, 4757, 4761],
    [{ "$tag": "RBRACKET" }, 4761, 4762],
    [{ "$tag": "CHAR", "0": "'" }, 4763, 4767],
    [{ "$tag": "RPAREN" }, 4767, 4768],
    [{ "$tag": "AS" }, 4769, 4771],
    [{ "$tag": "LC_IDENT", "0": "t" }, 4772, 4773],
    [{ "$tag": "FAT_ARROW" }, 4774, 4776],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    ",
      },
      4777,
      4847,
    ],
    [{ "$tag": "STRING", "0": "{" }, 4852, 4855],
    [{ "$tag": "FAT_ARROW" }, 4856, 4858],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_string(\"{\")\n      let _ = code_rbrace(buffer, lexbuf)\n      buffer.write_string(\"}\")\n      code_rbrace(buffer, lexbuf)\n    ",
      },
      4859,
      5004,
    ],
    [{ "$tag": "STRING", "0": "}" }, 5009, 5012],
    [{ "$tag": "FAT_ARROW" }, 5013, 5015],
    [{ "$tag": "LBRACE_CODE_RBRACE", "0": " $endpos " }, 5016, 5027],
    [{ "$tag": "UNDERSCORE" }, 5032, 5033],
    [{ "$tag": "AS" }, 5034, 5036],
    [{ "$tag": "LC_IDENT", "0": "t" }, 5037, 5038],
    [{ "$tag": "FAT_ARROW" }, 5039, 5041],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": "\n      buffer.write_char(t)\n      code_rbrace(buffer, lexbuf)\n    ",
      },
      5042,
      5110,
    ],
    [{ "$tag": "EOF" }, 5115, 5118],
    [{ "$tag": "FAT_ARROW" }, 5119, 5121],
    [
      {
        "$tag": "LBRACE_CODE_RBRACE",
        "0": " abort(\"Unexpected end of input\") ",
      },
      5122,
      5158,
    ],
    [{ "$tag": "RBRACE" }, 5161, 5162],
    [{ "$tag": "RBRACE" }, 5163, 5164],
    [{ "$tag": "LBRACE_CODE_RBRACE", "0": "" }, 5166, 5168],
    [{ "$tag": "EOI" }, 5169, 5169],
  ])
  assert_eq(tokens, tokens_new)
}
