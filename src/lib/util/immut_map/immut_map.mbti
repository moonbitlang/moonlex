// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/ulex/lib/util/immut_map"

// Values
fn[K, V] empty() -> T[K, V]

fn[K : Compare, V] from_iter(Iter[(K, V)]) -> T[K, V]

// Errors

// Types and methods
type T[K, V]
fn[K : Compare, V] T::add(Self[K, V], K, V) -> Self[K, V]
fn[K : Compare, V] T::get(Self[K, V], K) -> V?
fn[K, V] T::iter(Self[K, V]) -> Iter[(K, V)]
impl[K : Compare, V : Compare] Compare for T[K, V]
impl[K : Eq, V : Eq] Eq for T[K, V]
impl[K : Hash, V : Hash] Hash for T[K, V]

// Type aliases

// Traits

